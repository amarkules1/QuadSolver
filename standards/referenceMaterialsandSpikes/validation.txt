{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 https://jackstromberg.com/2013/02/how-to-validate-numeric-integer-input-in-c/ \
\
In this program, multiple steps were taken to validate user input, and validate the end result. In order to ensure the user enters only numbers, scanf was used. This is because scanf returns 1 when it works, and 0 if it does not. This is a simple way to verify input. The program also takes steps to ensure there are no extraneous inputs, by making sure there are only three values separated by a space. \
}